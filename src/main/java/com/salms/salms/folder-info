Controller
    Contains your RESTful controller classes. These classes handle incoming HTTP requests and define the API endpoints.

Config:
     Contains configuration classes, where you configure application settings, or AppConfig for other application-level configurations.

DTO:
    A DTO, is a design pattern used to transfer data between different layers or components of an application. The main purpose of a DTO is to encapsulate data and provide a simple data structure that can be easily passed around the application. DTOs are often used to transfer data between the front-end and back-end of a web application, between microservices, or between different layers of an application, like the service layer and the presentation layer.

Enum:
    Enum classes are typically used to represent a set of closely related and pre-defined values. Examples of common use cases for Enum classes include request status like SUCCESS, FAIL, PENDING and more.

Model:
    The model folder stores data models or entities that represent structure and behaviour of the application domain. These classes are mapped to database tables and define the properties and relationships of the application data.
    Basically DB tables

Repository:
    Contains repository classes that deal with data access. These classes typically use an ORM (Object-Relational Mapping) framework or JPA (Java Persistence API) to interact with the database.

Service:
    Contains service classes that implement business logic. Controllers use these services to perform operations on data.

Util:
    Place utility classes here

